{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../core/services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction LoginComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.errorMessage);\n  }\n}\nexport class LoginComponent {\n  constructor(fb, authService, router) {\n    this.fb = fb;\n    this.authService = authService;\n    this.router = router;\n    this.errorMessage = '';\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n  login() {\n    if (this.loginForm.invalid) return;\n    const {\n      email,\n      password\n    } = this.loginForm.value;\n    if (this.authService.login(email, password)) {\n      // Navigate to the protected application page\n      this.router.navigate(['/app']);\n    } else {\n      this.errorMessage = 'Invalid email or password';\n    }\n  }\n  static {\n    this.ɵfac = function LoginComponent_Factory(t) {\n      return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 16,\n      vars: 3,\n      consts: [[3, \"formGroup\", \"ngSubmit\"], [\"formControlName\", \"email\", \"type\", \"email\"], [\"formControlName\", \"password\", \"type\", \"password\"], [\"class\", \"error\", 4, \"ngIf\"], [\"type\", \"submit\", 3, \"disabled\"], [\"routerLink\", \"/register\"], [1, \"error\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"form\", 0);\n          i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_0_listener() {\n            return ctx.login();\n          });\n          i0.ɵɵelementStart(1, \"div\")(2, \"label\");\n          i0.ɵɵtext(3, \"Email:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(4, \"input\", 1);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"div\")(6, \"label\");\n          i0.ɵɵtext(7, \"Password:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(8, \"input\", 2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(9, LoginComponent_div_9_Template, 2, 1, \"div\", 3);\n          i0.ɵɵelementStart(10, \"button\", 4);\n          i0.ɵɵtext(11, \"Login\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"p\");\n          i0.ɵɵtext(13, \"Don't have an account? \");\n          i0.ɵɵelementStart(14, \"a\", 5);\n          i0.ɵɵtext(15, \"Register here\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n          i0.ɵɵadvance(9);\n          i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n        }\n      },\n      dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i3.RouterLink],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","errorMessage","LoginComponent","constructor","fb","authService","router","loginForm","group","email","required","password","login","invalid","value","navigate","ɵɵdirectiveInject","i1","FormBuilder","i2","AuthService","i3","Router","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵlistener","LoginComponent_Template_form_ngSubmit_0_listener","ɵɵelement","ɵɵtemplate","LoginComponent_div_9_Template","ɵɵproperty"],"sources":["/mnt/c/Users/simme/Desktop/Academic/job_search/BMC_ran_ziv/shopping-cart/src/app/pages/login/login.component.ts","/mnt/c/Users/simme/Desktop/Academic/job_search/BMC_ran_ziv/shopping-cart/src/app/pages/login/login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../core/services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent {\n  loginForm: FormGroup;\n  errorMessage: string = '';\n\n  constructor(private fb: FormBuilder, private authService: AuthService, private router: Router) {\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n\n  login() {\n    if (this.loginForm.invalid) return;\n\n    const { email, password } = this.loginForm.value;\n    if (this.authService.login(email, password)) {\n      // Navigate to the protected application page\n      this.router.navigate(['/app']);\n    } else {\n      this.errorMessage = 'Invalid email or password';\n    }\n  }\n}\n","<form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\n    <div>\n      <label>Email:</label>\n      <input formControlName=\"email\" type=\"email\" />\n    </div>\n  \n    <div>\n      <label>Password:</label>\n      <input formControlName=\"password\" type=\"password\" />\n    </div>\n  \n    <div *ngIf=\"errorMessage\" class=\"error\">{{ errorMessage }}</div>\n  \n    <button type=\"submit\" [disabled]=\"loginForm.invalid\">Login</button>\n    <p>Don't have an account? <a routerLink=\"/register\">Register here</a></p>\n\n  </form>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}