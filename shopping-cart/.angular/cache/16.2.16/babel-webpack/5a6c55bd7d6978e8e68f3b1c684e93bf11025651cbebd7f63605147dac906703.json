{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nfunction RegistrationComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Please enter a valid email. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Password must be at least 6 characters. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Password must contain at least one uppercase letter. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Passwords do not match. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r4.errorMessage);\n  }\n}\nexport class RegistrationComponent {\n  constructor(fb, router) {\n    this.fb = fb;\n    this.router = router;\n    this.errorMessage = '';\n  }\n  ngOnInit() {\n    this.registrationForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6), this.passwordValidator]],\n      confirmPassword: ['', [Validators.required]]\n    }, {\n      validator: this.passwordsMatchValidator\n    });\n  }\n  // Custom validator: Check if password contains at least one uppercase letter.\n  passwordValidator(control) {\n    const value = control.value;\n    return value && !/[A-Z]/.test(value) ? {\n      noCapital: true\n    } : null;\n  }\n  // Custom validator: Check if password and confirm password match. //TODO: \n  passwordsMatchValidator(group) {\n    const password = group.get('password')?.value;\n    const confirmPassword = group.get('confirmPassword')?.value;\n    return password !== confirmPassword ? {\n      passwordsMismatch: true\n    } : null;\n  }\n  register() {\n    if (this.registrationForm.invalid) return;\n    const {\n      email,\n      password\n    } = this.registrationForm.value;\n    const users = JSON.parse(localStorage.getItem('users') || '[]');\n    if (users.find(user => user.email === email)) {\n      this.errorMessage = 'User already exists';\n      return;\n    }\n    users.push({\n      email,\n      password\n    });\n    localStorage.setItem('users', JSON.stringify(users));\n    // Navigate to login page after successful registration.\n    this.router.navigate(['/login']);\n  }\n  static {\n    this.ɵfac = function RegistrationComponent_Factory(t) {\n      return new (t || RegistrationComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: RegistrationComponent,\n      selectors: [[\"app-registration\"]],\n      decls: 23,\n      vars: 7,\n      consts: [[1, \"registration-container\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"email\"], [\"id\", \"email\", \"formControlName\", \"email\", \"type\", \"email\", \"placeholder\", \"Your Email\"], [4, \"ngIf\"], [\"for\", \"password\"], [\"id\", \"password\", \"formControlName\", \"password\", \"type\", \"password\", \"placeholder\", \"Password\"], [\"for\", \"confirmPassword\"], [\"id\", \"confirmPassword\", \"formControlName\", \"confirmPassword\", \"type\", \"password\", \"placeholder\", \"Repeat your password\"], [\"type\", \"submit\", 3, \"disabled\"], [\"class\", \"error-message\", 4, \"ngIf\"], [1, \"error-message\"]],\n      template: function RegistrationComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"Sign up\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function RegistrationComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.register();\n          });\n          i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n          i0.ɵɵtext(6, \"Your Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(7, \"input\", 4);\n          i0.ɵɵtemplate(8, RegistrationComponent_div_8_Template, 2, 0, \"div\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"div\", 2)(10, \"label\", 6);\n          i0.ɵɵtext(11, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(12, \"input\", 7);\n          i0.ɵɵtemplate(13, RegistrationComponent_div_13_Template, 2, 0, \"div\", 5);\n          i0.ɵɵtemplate(14, RegistrationComponent_div_14_Template, 2, 0, \"div\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"div\", 2)(16, \"label\", 8);\n          i0.ɵɵtext(17, \"Repeat your password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(18, \"input\", 9);\n          i0.ɵɵtemplate(19, RegistrationComponent_div_19_Template, 2, 0, \"div\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"button\", 10);\n          i0.ɵɵtext(21, \"Register\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(22, RegistrationComponent_div_22_Template, 2, 1, \"div\", 11);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          let tmp_1_0;\n          let tmp_2_0;\n          let tmp_3_0;\n          let tmp_4_0;\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"formGroup\", ctx.registrationForm);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.registrationForm.get(\"email\")) == null ? null : tmp_1_0.invalid) && ((tmp_1_0 = ctx.registrationForm.get(\"email\")) == null ? null : tmp_1_0.touched));\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx.registrationForm.get(\"password\")) == null ? null : tmp_2_0.errors == null ? null : tmp_2_0.errors[\"minlength\"]);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", (tmp_3_0 = ctx.registrationForm.get(\"password\")) == null ? null : tmp_3_0.errors == null ? null : tmp_3_0.errors[\"noCapital\"]);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", (ctx.registrationForm.errors == null ? null : ctx.registrationForm.errors[\"passwordsMismatch\"]) && ((tmp_4_0 = ctx.registrationForm.get(\"confirmPassword\")) == null ? null : tmp_4_0.touched));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"disabled\", ctx.registrationForm.invalid);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n        }\n      },\n      styles: [\"\\n\\n.registration-container[_ngcontent-%COMP%] {\\n  max-width: 400px;\\n  margin: 0 auto;\\n  padding: 2rem;\\n  border: 1px solid #ccc;\\n  border-radius: 8px;\\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\\n  text-align: center;\\n}\\n\\nh2[_ngcontent-%COMP%] {\\n  margin-bottom: 1.5rem;\\n  color: #333;\\n  font-family: \\\"Arial\\\", sans-serif;\\n  font-weight: bold;\\n}\\n\\n.form-group[_ngcontent-%COMP%] {\\n  margin-bottom: 1rem;\\n}\\n\\nlabel[_ngcontent-%COMP%] {\\n  display: block;\\n  margin-bottom: 0.5rem;\\n  font-weight: bold;\\n}\\n\\ninput[_ngcontent-%COMP%] {\\n  width: 100%;\\n  padding: 0.5rem;\\n  border: 1px solid #ccc;\\n  border-radius: 4px;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n  width: 100%;\\n  padding: 0.75rem;\\n  background-color: #007bff;\\n  color: #fff;\\n  border: none;\\n  border-radius: 4px;\\n  cursor: pointer;\\n  font-size: 1rem;\\n}\\n\\nbutton[_ngcontent-%COMP%]:disabled {\\n  background-color: #ccc;\\n  cursor: not-allowed;\\n}\\n\\n.error-message[_ngcontent-%COMP%] {\\n  color: red;\\n  margin-top: 1rem;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvcmVnaXN0cmF0aW9uL3JlZ2lzdHJhdGlvbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSw0SkFBQTtBQUNBO0VBQ0UsZ0JBQUE7RUFDQSxjQUFBO0VBQ0EsYUFBQTtFQUNBLHNCQUFBO0VBQ0Esa0JBQUE7RUFDQSx3Q0FBQTtFQUNBLGtCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxxQkFBQTtFQUNBLFdBQUE7RUFDQSxnQ0FBQTtFQUNBLGlCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxtQkFBQTtBQUNGOztBQUVBO0VBQ0UsY0FBQTtFQUNBLHFCQUFBO0VBQ0EsaUJBQUE7QUFDRjs7QUFFQTtFQUNFLFdBQUE7RUFDQSxlQUFBO0VBQ0Esc0JBQUE7RUFDQSxrQkFBQTtBQUNGOztBQUVBO0VBQ0UsV0FBQTtFQUNBLGdCQUFBO0VBQ0EseUJBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtFQUNBLGtCQUFBO0VBQ0EsZUFBQTtFQUNBLGVBQUE7QUFDRjs7QUFFQTtFQUNFLHNCQUFBO0VBQ0EsbUJBQUE7QUFDRjs7QUFFQTtFQUNFLFVBQUE7RUFDQSxnQkFBQTtBQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLyogZmlsZXBhdGg6IGM6XFxVc2Vyc1xcc2ltbWVcXERlc2t0b3BcXEFjYWRlbWljXFxqb2Jfc2VhcmNoXFxCTUNfcmFuX3ppdlxcc2hvcHBpbmctY2FydC1hcHBcXHNob3BwaW5nLWNhcnRcXHNyY1xcYXBwXFxwYWdlc1xccmVnaXN0cmF0aW9uXFxyZWdpc3RyYXRpb24uY29tcG9uZW50LnNjc3MgKi9cclxuLnJlZ2lzdHJhdGlvbi1jb250YWluZXIge1xyXG4gIG1heC13aWR0aDogNDAwcHg7XHJcbiAgbWFyZ2luOiAwIGF1dG87XHJcbiAgcGFkZGluZzogMnJlbTtcclxuICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xyXG4gIGJvcmRlci1yYWRpdXM6IDhweDtcclxuICBib3gtc2hhZG93OiAwIDJweCA0cHggcmdiYSgwLCAwLCAwLCAwLjEpO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuaDIge1xyXG4gIG1hcmdpbi1ib3R0b206IDEuNXJlbTtcclxuICBjb2xvcjogIzMzMztcclxuICBmb250LWZhbWlseTogJ0FyaWFsJywgc2Fucy1zZXJpZjtcclxuICBmb250LXdlaWdodDogYm9sZDtcclxufVxyXG5cclxuLmZvcm0tZ3JvdXAge1xyXG4gIG1hcmdpbi1ib3R0b206IDFyZW07XHJcbn1cclxuXHJcbmxhYmVsIHtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICBtYXJnaW4tYm90dG9tOiAwLjVyZW07XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn1cclxuXHJcbmlucHV0IHtcclxuICB3aWR0aDogMTAwJTtcclxuICBwYWRkaW5nOiAwLjVyZW07XHJcbiAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcclxuICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbn1cclxuXHJcbmJ1dHRvbiB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgcGFkZGluZzogMC43NXJlbTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA3YmZmO1xyXG4gIGNvbG9yOiAjZmZmO1xyXG4gIGJvcmRlcjogbm9uZTtcclxuICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIGZvbnQtc2l6ZTogMXJlbTtcclxufVxyXG5cclxuYnV0dG9uOmRpc2FibGVkIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjY2NjO1xyXG4gIGN1cnNvcjogbm90LWFsbG93ZWQ7XHJcbn1cclxuXHJcbi5lcnJvci1tZXNzYWdlIHtcclxuICBjb2xvcjogcmVkO1xyXG4gIG1hcmdpbi10b3A6IDFyZW07XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r4","errorMessage","RegistrationComponent","constructor","fb","router","ngOnInit","registrationForm","group","email","required","password","minLength","passwordValidator","confirmPassword","validator","passwordsMatchValidator","control","value","test","noCapital","get","passwordsMismatch","register","invalid","users","JSON","parse","localStorage","getItem","find","user","push","setItem","stringify","navigate","ɵɵdirectiveInject","i1","FormBuilder","i2","Router","selectors","decls","vars","consts","template","RegistrationComponent_Template","rf","ctx","ɵɵlistener","RegistrationComponent_Template_form_ngSubmit_3_listener","ɵɵelement","ɵɵtemplate","RegistrationComponent_div_8_Template","RegistrationComponent_div_13_Template","RegistrationComponent_div_14_Template","RegistrationComponent_div_19_Template","RegistrationComponent_div_22_Template","ɵɵproperty","tmp_1_0","touched","tmp_2_0","errors","tmp_3_0","tmp_4_0"],"sources":["/mnt/c/Users/simme/Desktop/Academic/job_search/BMC_ran_ziv/shopping-cart-app/shopping-cart/src/app/pages/registration/registration.component.ts","/mnt/c/Users/simme/Desktop/Academic/job_search/BMC_ran_ziv/shopping-cart-app/shopping-cart/src/app/pages/registration/registration.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, AbstractControl } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.scss']\n})\nexport class RegistrationComponent implements OnInit {\n  registrationForm!: FormGroup;\n  errorMessage: string = '';\n\n  constructor(private fb: FormBuilder, private router: Router) {}\n\n  ngOnInit(): void {\n    this.registrationForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6), this.passwordValidator]],\n      confirmPassword: ['', [Validators.required]]\n    }, { validator: this.passwordsMatchValidator });\n  }\n\n  // Custom validator: Check if password contains at least one uppercase letter.\n  passwordValidator(control: AbstractControl) {\n    const value = control.value;\n    return value && !/[A-Z]/.test(value) ? { noCapital: true } : null;\n  }\n\n  // Custom validator: Check if password and confirm password match. //TODO: \n  passwordsMatchValidator(group: AbstractControl) {\n    const password = group.get('password')?.value;\n    const confirmPassword = group.get('confirmPassword')?.value;\n    return password !== confirmPassword ? { passwordsMismatch: true } : null;\n  }\n\n  register() {\n    if (this.registrationForm.invalid) return;\n\n    const { email, password } = this.registrationForm.value;\n    const users = JSON.parse(localStorage.getItem('users') || '[]');\n\n    if (users.find((user: any) => user.email === email)) {\n      this.errorMessage = 'User already exists';\n      return;\n    }\n\n    users.push({ email, password });\n    localStorage.setItem('users', JSON.stringify(users));\n\n    // Navigate to login page after successful registration.\n    this.router.navigate(['/login']);\n  }\n}\n","<div class=\"registration-container\">\n  <h2>Sign up</h2>\n  <form [formGroup]=\"registrationForm\" (ngSubmit)=\"register()\">\n    <div class=\"form-group\">\n      <label for=\"email\">Your Email</label>\n      <input id=\"email\" formControlName=\"email\" type=\"email\" placeholder=\"Your Email\" />\n      <div *ngIf=\"registrationForm.get('email')?.invalid && registrationForm.get('email')?.touched\">\n        Please enter a valid email.\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"password\">Password</label>\n      <input id=\"password\" formControlName=\"password\" type=\"password\" placeholder=\"Password\" />\n      <div *ngIf=\"registrationForm.get('password')?.errors?.['minlength']\">\n        Password must be at least 6 characters.\n      </div>\n      <div *ngIf=\"registrationForm.get('password')?.errors?.['noCapital']\">\n        Password must contain at least one uppercase letter.\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"confirmPassword\">Repeat your password</label>\n      <input id=\"confirmPassword\" formControlName=\"confirmPassword\" type=\"password\" placeholder=\"Repeat your password\" />\n      <div *ngIf=\"registrationForm.errors?.['passwordsMismatch'] && registrationForm.get('confirmPassword')?.touched\">\n        Passwords do not match.\n      </div>\n    </div>\n    <button type=\"submit\" [disabled]=\"registrationForm.invalid\">Register</button>\n    <div *ngIf=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</div>\n  </form>\n</div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}