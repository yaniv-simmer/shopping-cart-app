{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction RegistrationComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Please enter a valid email. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Password must be at least 6 characters. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Password must contain at least one uppercase letter. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Passwords do not match. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r4.errorMessage);\n  }\n}\nexport class RegistrationComponent {\n  constructor(fb, router) {\n    this.fb = fb;\n    this.router = router;\n    this.errorMessage = '';\n  }\n  ngOnInit() {\n    this.registrationForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6), this.passwordValidator]],\n      confirmPassword: ['', [Validators.required]]\n    }, {\n      validator: this.passwordsMatchValidator\n    });\n  }\n  // Custom validator: Check if password contains at least one uppercase letter.\n  passwordValidator(control) {\n    const value = control.value;\n    return value && !/[A-Z]/.test(value) ? {\n      noCapital: true\n    } : null;\n  }\n  // Custom validator: Check if password and confirm password match.\n  passwordsMatchValidator(group) {\n    const password = group.get('password')?.value;\n    const confirmPassword = group.get('confirmPassword')?.value;\n    return password !== confirmPassword ? {\n      passwordsMismatch: true\n    } : null;\n  }\n  register() {\n    if (this.registrationForm.invalid) return;\n    const {\n      email,\n      password\n    } = this.registrationForm.value;\n    const users = JSON.parse(localStorage.getItem('users') || '[]');\n    if (users.find(user => user.email === email)) {\n      this.errorMessage = 'User already exists';\n      return;\n    }\n    users.push({\n      email,\n      password\n    });\n    localStorage.setItem('users', JSON.stringify(users));\n    // Navigate to login page after successful registration.\n    this.router.navigate(['/login']);\n  }\n  static {\n    this.ɵfac = function RegistrationComponent_Factory(t) {\n      return new (t || RegistrationComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: RegistrationComponent,\n      selectors: [[\"app-registration\"]],\n      decls: 20,\n      vars: 7,\n      consts: [[3, \"formGroup\", \"ngSubmit\"], [\"formControlName\", \"email\", \"type\", \"email\"], [4, \"ngIf\"], [\"formControlName\", \"password\", \"type\", \"password\"], [\"formControlName\", \"confirmPassword\", \"type\", \"password\"], [\"class\", \"error\", 4, \"ngIf\"], [\"type\", \"submit\", 3, \"disabled\"], [1, \"error\"]],\n      template: function RegistrationComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"form\", 0);\n          i0.ɵɵlistener(\"ngSubmit\", function RegistrationComponent_Template_form_ngSubmit_0_listener() {\n            return ctx.register();\n          });\n          i0.ɵɵelementStart(1, \"div\")(2, \"label\");\n          i0.ɵɵtext(3, \"Email:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(4, \"input\", 1);\n          i0.ɵɵtemplate(5, RegistrationComponent_div_5_Template, 2, 0, \"div\", 2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"div\")(7, \"label\");\n          i0.ɵɵtext(8, \"Password:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(9, \"input\", 3);\n          i0.ɵɵtemplate(10, RegistrationComponent_div_10_Template, 2, 0, \"div\", 2);\n          i0.ɵɵtemplate(11, RegistrationComponent_div_11_Template, 2, 0, \"div\", 2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"div\")(13, \"label\");\n          i0.ɵɵtext(14, \"Confirm Password:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(15, \"input\", 4);\n          i0.ɵɵtemplate(16, RegistrationComponent_div_16_Template, 2, 0, \"div\", 2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(17, RegistrationComponent_div_17_Template, 2, 1, \"div\", 5);\n          i0.ɵɵelementStart(18, \"button\", 6);\n          i0.ɵɵtext(19, \"Register\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          let tmp_1_0;\n          let tmp_2_0;\n          let tmp_3_0;\n          let tmp_4_0;\n          i0.ɵɵproperty(\"formGroup\", ctx.registrationForm);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.registrationForm.get(\"email\")) == null ? null : tmp_1_0.invalid) && ((tmp_1_0 = ctx.registrationForm.get(\"email\")) == null ? null : tmp_1_0.touched));\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx.registrationForm.get(\"password\")) == null ? null : tmp_2_0.errors == null ? null : tmp_2_0.errors.minlength);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", (tmp_3_0 = ctx.registrationForm.get(\"password\")) == null ? null : tmp_3_0.errors == null ? null : tmp_3_0.errors.noCapital);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", (ctx.registrationForm.errors == null ? null : ctx.registrationForm.errors.passwordsMismatch) && ((tmp_4_0 = ctx.registrationForm.get(\"confirmPassword\")) == null ? null : tmp_4_0.touched));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"disabled\", ctx.registrationForm.invalid);\n        }\n      },\n      dependencies: [i3.NgIf],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r4","errorMessage","RegistrationComponent","constructor","fb","router","ngOnInit","registrationForm","group","email","required","password","minLength","passwordValidator","confirmPassword","validator","passwordsMatchValidator","control","value","test","noCapital","get","passwordsMismatch","register","invalid","users","JSON","parse","localStorage","getItem","find","user","push","setItem","stringify","navigate","ɵɵdirectiveInject","i1","FormBuilder","i2","Router","selectors","decls","vars","consts","template","RegistrationComponent_Template","rf","ctx","ɵɵlistener","RegistrationComponent_Template_form_ngSubmit_0_listener","ɵɵelement","ɵɵtemplate","RegistrationComponent_div_5_Template","RegistrationComponent_div_10_Template","RegistrationComponent_div_11_Template","RegistrationComponent_div_16_Template","RegistrationComponent_div_17_Template","ɵɵproperty","tmp_1_0","touched","tmp_2_0","errors","minlength","tmp_3_0","tmp_4_0"],"sources":["/mnt/c/Users/simme/Desktop/Academic/job_search/BMC_ran_ziv/shopping-cart/src/app/pages/registration/registration.component.ts","/mnt/c/Users/simme/Desktop/Academic/job_search/BMC_ran_ziv/shopping-cart/src/app/pages/registration/registration.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, AbstractControl } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.scss']\n})\nexport class RegistrationComponent implements OnInit {\n  registrationForm: FormGroup;\n  errorMessage: string = '';\n\n  constructor(private fb: FormBuilder, private router: Router) {}\n\n  ngOnInit(): void {\n    this.registrationForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6), this.passwordValidator]],\n      confirmPassword: ['', [Validators.required]]\n    }, { validator: this.passwordsMatchValidator });\n  }\n\n  // Custom validator: Check if password contains at least one uppercase letter.\n  passwordValidator(control: AbstractControl) {\n    const value = control.value;\n    return value && !/[A-Z]/.test(value) ? { noCapital: true } : null;\n  }\n\n  // Custom validator: Check if password and confirm password match.\n  passwordsMatchValidator(group: AbstractControl) {\n    const password = group.get('password')?.value;\n    const confirmPassword = group.get('confirmPassword')?.value;\n    return password !== confirmPassword ? { passwordsMismatch: true } : null;\n  }\n\n  register() {\n    if (this.registrationForm.invalid) return;\n\n    const { email, password } = this.registrationForm.value;\n    const users = JSON.parse(localStorage.getItem('users') || '[]');\n\n    if (users.find((user: any) => user.email === email)) {\n      this.errorMessage = 'User already exists';\n      return;\n    }\n\n    users.push({ email, password });\n    localStorage.setItem('users', JSON.stringify(users));\n\n    // Navigate to login page after successful registration.\n    this.router.navigate(['/login']);\n  }\n}\n","<form [formGroup]=\"registrationForm\" (ngSubmit)=\"register()\">\n    <div>\n      <label>Email:</label>\n      <input formControlName=\"email\" type=\"email\" />\n      <div *ngIf=\"registrationForm.get('email')?.invalid && registrationForm.get('email')?.touched\">\n        Please enter a valid email.\n      </div>\n    </div>\n  \n    <div>\n      <label>Password:</label>\n      <input formControlName=\"password\" type=\"password\" />\n      <div *ngIf=\"registrationForm.get('password')?.errors?.minlength\">\n        Password must be at least 6 characters.\n      </div>\n      <div *ngIf=\"registrationForm.get('password')?.errors?.noCapital\">\n        Password must contain at least one uppercase letter.\n      </div>\n    </div>\n  \n    <div>\n      <label>Confirm Password:</label>\n      <input formControlName=\"confirmPassword\" type=\"password\" />\n      <div *ngIf=\"registrationForm.errors?.passwordsMismatch && registrationForm.get('confirmPassword')?.touched\">\n        Passwords do not match.\n      </div>\n    </div>\n  \n    <div *ngIf=\"errorMessage\" class=\"error\">{{ errorMessage }}</div>\n  \n    <button type=\"submit\" [disabled]=\"registrationForm.invalid\">Register</button>\n  </form>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}